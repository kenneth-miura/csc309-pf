{
  "openapi": "3.0.2",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/studios/list/": {
      "get": {
        "operationId": "listStudios",
        "description": "",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/list/filter/": {
      "get": {
        "operationId": "listStudioListFilters",
        "description": "Filter choices are:\naddress, amenities, classoffering, id, latitude, longitude, name, phone_num, postal_code, studio_images",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/{studio_id}/classes/list/": {
      "get": {
        "operationId": "listStudioClass",
        "description": "This returns a list of **all** ClassOfferings held by said studio, and sends a paginated\nlist of ClassInstances, sorted in ascending order by the date of the ClassInstance.",
        "parameters": [
          {
            "name": "studio_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                      "type": "array",
                      "items": {}
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/{studio_id}/": {
      "get": {
        "operationId": "retrieveStudio",
        "description": "",
        "parameters": [
          {
            "name": "studio_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Studio"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/{studio_id}/amenities/list/": {
      "get": {
        "operationId": "listAmenitys",
        "description": "",
        "parameters": [
          {
            "name": "studio_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Amenity"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/{studio_id}/images/list/": {
      "get": {
        "operationId": "listStudioImages",
        "description": "",
        "parameters": [
          {
            "name": "studio_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The initial index from which to return the results.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/StudioImage"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/{studio_id}/classes/filter/": {
      "get": {
        "operationId": "listStudioListFilterClasses",
        "description": "Filter choices are:\ncapacity, classinstance, coach, description, end_recursion_date, id, keyword, name, studio,\nstudio_id, timeinterval, userenroll",
        "parameters": [
          {
            "name": "studio_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/studios/{studio_id}/directions/": {
      "get": {
        "operationId": "listStudioMapsDirections",
        "description": "",
        "parameters": [
          {
            "name": "studio_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "studios"
        ]
      }
    },
    "/subscriptions/payment_history/{user_id}/": {
      "get": {
        "operationId": "retrieveGetPaymentHistory",
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/accounts/register/": {
      "post": {
        "operationId": "createTFCUser",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TFCUser"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/accounts/login/": {
      "post": {
        "operationId": "createTokenObtainPair",
        "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TokenObtainPair"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenObtainPair"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/classes/enroll/single_class/{class_id}/": {
      "post": {
        "operationId": "createEnrollSingleInstance",
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      }
    },
    "/classes/enroll/future_classes/{class_id}/": {
      "post": {
        "operationId": "createEnrollFuture",
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      }
    },
    "/subscriptions/subscription/": {
      "post": {
        "operationId": "createSubscriptionDetail",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/accounts/{user_id}/update/": {
      "put": {
        "operationId": "updateTFCUser",
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TFCUser"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      },
      "patch": {
        "operationId": "partialUpdateTFCUser",
        "description": "",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/TFCUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TFCUser"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "accounts"
        ]
      }
    },
    "/subscriptions/subscription/{id}/": {
      "put": {
        "operationId": "updateDeleteUpdateSubscription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "operationId": "partialUpdateDeleteUpdateSubscription",
        "description": "only allows patch of subscription type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "delete": {
        "operationId": "destroyDeleteUpdateSubscription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/subscription/update/{id}/": {
      "put": {
        "operationId": "updateSubscription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "operationId": "partialUpdateSubscription",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/subscriptions/payment_method/{id}/": {
      "put": {
        "operationId": "updatePaymentMethod",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      },
      "patch": {
        "operationId": "partialUpdatePaymentMethod",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentMethod"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "subscriptions"
        ]
      }
    },
    "/classes/unenroll/single_class/{class_id}/": {
      "delete": {
        "operationId": "destroyUnenrollSingle",
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      }
    },
    "/classes/unenroll/future_classes/{class_id}/": {
      "delete": {
        "operationId": "destroyUnenrollFuture",
        "description": "",
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "classes"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Studio": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200
          },
          "address": {
            "type": "string",
            "maxLength": 200
          },
          "postal_code": {
            "type": "string",
            "maxLength": 200
          },
          "phone_num": {
            "type": "string",
            "maxLength": 200
          },
          "longitude": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 1e-06,
            "maximum": 1000,
            "minimum": -1000
          },
          "latitude": {
            "type": "string",
            "format": "decimal",
            "multipleOf": 1e-06,
            "maximum": 1000,
            "minimum": -1000
          }
        },
        "required": [
          "name",
          "address",
          "postal_code",
          "phone_num",
          "longitude",
          "latitude"
        ]
      },
      "Amenity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 200
          },
          "quantity": {
            "type": "integer"
          },
          "studio": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 200
              },
              "address": {
                "type": "string",
                "maxLength": 200
              },
              "postal_code": {
                "type": "string",
                "maxLength": 200
              },
              "phone_num": {
                "type": "string",
                "maxLength": 200
              },
              "longitude": {
                "type": "string",
                "format": "decimal",
                "multipleOf": 1e-06,
                "maximum": 1000,
                "minimum": -1000
              },
              "latitude": {
                "type": "string",
                "format": "decimal",
                "multipleOf": 1e-06,
                "maximum": 1000,
                "minimum": -1000
              }
            },
            "required": [
              "name",
              "address",
              "postal_code",
              "phone_num",
              "longitude",
              "latitude"
            ],
            "readOnly": true
          }
        },
        "required": [
          "name",
          "quantity"
        ]
      },
      "StudioImage": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "image"
        ]
      },
      "TFCUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 200
          },
          "password": {
            "type": "string",
            "maxLength": 200
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true,
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "last_name": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "phone_number": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          },
          "avatar": {
            "type": "string",
            "format": "binary",
            "nullable": true
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "TokenObtainPair": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "subscription_type": {
            "type": "object",
            "properties": {
              "price": {
                "type": "number"
              },
              "period": {
                "enum": [
                  0,
                  1
                ],
                "type": "integer"
              }
            },
            "required": [
              "price",
              "period"
            ],
            "readOnly": true
          },
          "payment_method": {
            "type": "object",
            "properties": {
              "card_number": {
                "type": "integer"
              },
              "security_code": {
                "type": "integer"
              }
            },
            "required": [
              "card_number",
              "security_code"
            ]
          },
          "subscription_type_id": {
            "type": "integer",
            "writeOnly": true
          }
        },
        "required": [
          "payment_method",
          "subscription_type_id"
        ]
      },
      "PaymentMethod": {
        "type": "object",
        "properties": {
          "card_number": {
            "type": "integer"
          },
          "security_code": {
            "type": "integer"
          }
        },
        "required": [
          "card_number",
          "security_code"
        ]
      }
    }
  }
}